
cache_manager.cpp – implementation file that contains the following 
methods: 
1. getTable - return the hash table 
2. getList - return the FIFO list 
3. isEmpty - Check if the HashTable is empty 
4. getSize - return the number of items in the CacheManager 
5. add - adds a new node to the CacheManager and to doublyLinkedList  
6. remove – remove node with key value 
7. clear - remove all entries from the CacheManager 
8. getItem - retrieve item from the CacheManager, and moves node to the 
head of doublyLinkedList 
9. getMaxCacheSize - retrieve max size of cache from the CacheManager 
10.  contains - check if a node with key exists in the table, and moves node to 
the head of doublyLinkedList, if true 
11.  printCache - print out the cache information


doubly_linked_list.cpp – implementation file that contains the following 
methods: 
12. getSize - Get the size of the list 
13. isEmpty - Check if the list is empty 
14. insertAtHead - Adds a new node at the beginning of the list  
15. insertAtTail - Adds a new node at the end of the list  
16. remove - Searches for a node with a specific value and deletes it from the 
list  
17. removeHeaderNode – Removes header node 
18. removeTailNode – Removes tail node 
19. moveNodeToHead – Moves a specific node to the front 
20. moveNodeToTail – Moves a specific node to the end 
21. clear - Clear the list (delete all nodes) 
22. printList - print the doubly linked list from head to tail to console and 
output file 
23. reversePrintList- print the doubly linked list from tail to head to console 
and output file

hash_table.cpp – implementation file that contains the following methods: 
24. getSize - return the size of the hash table 
25. calculateHashCode – perform hashing function 
26. isEmpty - Check if the HashTable is empty 
27. getNumberOfItems - return number of items in the hash table 
28. add - adds a new node to the hash table  
29. remove – remove node with key value 
30. clear - remove all entries from the table 
31. getItem - returns pointer to the HashNode 
32. contains - check if a node with key exists in the table 
33. printTable - print out contents of hash table to console and output file 
34. getTable - return the hash table